// <auto-generated />
using System;
using ContactTracerNoAuth.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ContactTracerNoAuth.Migrations
{
    [DbContext(typeof(CtDbContext))]
    partial class CtDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2");

            modelBuilder.Entity("ContactTracerNoAuth.Data.Checkin", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CheckinAtUtc")
                        .HasColumnType("datetime2(2)");

                    b.Property<string>("IpAddress")
                        .HasColumnType("TEXT")
                        .HasMaxLength(39);

                    b.Property<string>("SuppliedEmail")
                        .HasColumnType("TEXT")
                        .HasMaxLength(200);

                    b.Property<string>("SuppliedName")
                        .HasColumnType("TEXT")
                        .HasMaxLength(200);

                    b.Property<string>("SuppliedPhoneNumber")
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.Property<string>("UserAgent")
                        .HasColumnType("TEXT")
                        .HasMaxLength(1000);

                    b.Property<long>("VenueId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("VenueId");

                    b.ToTable("Checkins");
                });

            modelBuilder.Entity("ContactTracerNoAuth.Data.Venue", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("DisplayName")
                        .HasColumnType("TEXT")
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.ToTable("Venues");
                });

            modelBuilder.Entity("ContactTracerNoAuth.Data.Checkin", b =>
                {
                    b.HasOne("ContactTracerNoAuth.Data.Venue", "Venue")
                        .WithMany()
                        .HasForeignKey("VenueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
